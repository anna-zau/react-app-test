{"version":3,"file":"static/js/352.cb3d6049.chunk.js","mappings":"uLAAaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,0BACE,4BACE,kBACEA,MAAOA,EACPC,KAAK,OACLC,YAAY,eACZH,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,OAAOJ,MAAtB,OAKpB,E,mCC+BD,EAtCkB,WAAO,IAAD,EACtB,GAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACvCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAeC,KAAKV,EACrB,GAAE,IAEH,IAIMW,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOb,EAAUK,QAAO,SAAAS,GAAQ,OAC9BA,EAASC,KAAKC,cAAcC,SAASZ,EAAOW,cADd,GAGjC,GAAE,CAAChB,EAAWK,IAEf,OACE,6BACE,SAACb,EAAD,CAAWE,MAAOW,EAAQZ,SAZT,SAAAC,GACnBU,EAA0B,KAAVV,EAAe,CAAEW,OAAQX,GAAU,CAAC,EACrD,IAWIkB,EAAiBM,OAAS,IACzB,wBACGN,EAAiBO,KAAI,gBAAGC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAP,OACpB,yBACE,SAAC,KAAD,CAAMM,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMhB,GAAlC,SACGQ,KAFIK,EADW,QAW/B,C","sources":["components/SearchBox/SearchBox.jsx","pages/Customers.jsx"],"sourcesContent":["export const SearchBox = ({ onChange, value }) => {\n  return (\n    <div>\n      <label>\n        <input\n          value={value}\n          type=\"text\"\n          placeholder=\"Enter a name\"\n          onChange={e => onChange(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n};\n","import { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getCustomers } from 'servises/fakeAPI';\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get('filter') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    getCustomers().then(setCustomers);\n  }, []);\n\n  const changeFilter = value => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n  const visibleCustomers = useMemo(() => {\n    return customers.filter(customer =>\n      customer.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [customers, filter]);\n\n  return (\n    <main>\n      <SearchBox value={filter} onChange={changeFilter} />\n      {visibleCustomers.length > 0 && (\n        <ul>\n          {visibleCustomers.map(({ id, name }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Customers;\n"],"names":["SearchBox","onChange","value","type","placeholder","e","target","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","filter","get","location","useLocation","useEffect","getCustomers","then","visibleCustomers","useMemo","customer","name","toLowerCase","includes","length","map","id","to","state","from"],"sourceRoot":""}